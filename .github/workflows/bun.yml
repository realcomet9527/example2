name: bun
on:
  push:
    branches: [main, bun-actions]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_TAG: bun-test'

jobs:
  tests:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git -c submodule."src/javascript/jsc/WebKit".update=none submodule update --init --recursive --depth=1 --progress -j 8
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Pull Base Image
        if: steps.cache-builds.outputs.cache-hit != 'true'
        run: docker pull bunbunbunbun/bun-test-base:latest && docker pull bunbunbunbun/bun-base:latest && docker pull bunbunbunbun/bun-base-with-zig-and-webkit:latest && docker tag bun-base:latest bunbunbunbun/bun-base && docker tag bun-base-with-zig-and-webkit:latest bunbunbunbun/bun-base-with-zig-and-webkit:latest
      - name: Build Release Image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: release
          tags: bun:${{github.sha}}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
      - name: Build tests
        uses: docker/build-push-action@v2
        with:
          context: .
          target: test_base
          tags: bun-test:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          builder: ${{ steps.buildx.outputs.name }}
      - name: Run test-with-hmr
        env:
          BUN_TEST_NAME: test-with-hmr
          GITHUB_WORKSPACE: $GITHUB_WORKSPACE
          RUNNER_TEMP: ${RUNNER_TEMP}
        run: bash .docker/runner.sh
      - name: Run test-no-hmr
        env:
          BUN_TEST_NAME: test-no-hmr
          GITHUB_WORKSPACE: $GITHUB_WORKSPACE
          RUNNER_TEMP: ${RUNNER_TEMP}
        run: bash .docker/runner.sh
      - name: Run test-bun-create-next
        env:
          RUNNER_TEMP: ${RUNNER_TEMP}
          BUN_TEST_NAME: test-create-next
          GITHUB_WORKSPACE: $GITHUB_WORKSPACE
        run: bash .docker/runner.sh
      - name: Run test-bun-create-react
        env:
          RUNNER_TEMP: ${RUNNER_TEMP}
          BUN_TEST_NAME: test-create-react
          GITHUB_WORKSPACE: $GITHUB_WORKSPACE
        run: bash .docker/runner.sh
      - name: Run test-bun-run
        env:
          RUNNER_TEMP: ${RUNNER_TEMP}
          BUN_TEST_NAME: test-bun-run
          GITHUB_WORKSPACE: $GITHUB_WORKSPACE
        run: bash .docker/runner.sh

  release:
    runs-on: self-hosted
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git -c submodule."src/javascript/jsc/WebKit".update=none submodule update --init --recursive --depth=1 --progress -j 8
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Build release image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: release
          tags: ghcr.io/jarred-sumner/bun:${{github.sha}}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
