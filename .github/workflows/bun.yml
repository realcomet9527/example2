name: bun
on:
  push:
    branches: [main, bun-actions]
    paths-ignore:
      - "examples/**"
      - "bench/**"
      - "README.*"
      - "LICENSE"
      - ".vscode"
      - ".devcontainer"
  pull_request:
    branches: [main]
    paths-ignore:
      - "examples/**"
      - "bench/**"
      - README.*
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_TAG: bun-test'

jobs:
  linux-x64:
    name: Linux x64 (${{ matrix.cpu }})
    runs-on: linux-amd64
    timeout-minutes: 90
    strategy:
      matrix:
        cpu: [native, sandybridge]

    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git -c submodule."src/bun.js/WebKit".update=none submodule update --init --recursive --depth=1 --progress -j $(nproc)
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          rm -rf ${{runner.temp}}/release
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ARCH=x86_64
            BUILDARCH=amd64
            CPU_TARGET=${{matrix.cpu}}
          platforms: linux/amd64
          target: artifact
          outputs: type=local,dest=${{runner.temp}}/release
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'native' }}
        with:
          name: bun-linux-amd64
          path: ${{runner.temp}}/release/bun
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'sandybridge' }}
        with:
          name: bun-linux-amd64-generic
          path: ${{runner.temp}}/release/bun
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'native' }}
        with:
          name: bun-dependencies-linux-amd64
          path: ${{runner.temp}}/release/bun-dependencies
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'sandybridge' }}
        with:
          name: bun-dependencies-linux-amd64-generic
          path: ${{runner.temp}}/release/bun-dependencies
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'native' }}
        with:
          name: bun-linux-amd64-profile
          path: ${{runner.temp}}/release/bun-profile
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'sandybridge' }}
        with:
          name: bun-linux-amd64-generic-profile
          path: ${{runner.temp}}/release/bun-profile
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'native' }}
        with:
          name: bun-obj-linux-amd64
          path: ${{runner.temp}}/release/bun-obj
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.cpu == 'sandybridge' }}
        with:
          name: bun-obj-linux-amd64-generic
          path: ${{runner.temp}}/release/bun-obj
  linux-aarch64:
    name: Linux aarch64
    runs-on: linux-arm64
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git -c submodule."src/bun.js/WebKit".update=none submodule update --init --recursive --depth=1 --progress -j $(nproc)
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Run
        run: |
          rm -rf ${{runner.temp}}/release
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ARCH=aarch64
            BUILDARCH=arm64
            CPU_TARGET=native
          platforms: linux/arm64
          target: artifact
          outputs: type=local,dest=${{runner.temp}}/release
      - uses: actions/upload-artifact@v3
        with:
          name: bun-linux-aarch64
          path: ${{runner.temp}}/release/bun
      - uses: actions/upload-artifact@v3
        with:
          name: bun-dependencies-linux-aarch64
          path: ${{runner.temp}}/release/bun-dependencies
      - uses: actions/upload-artifact@v3
        with:
          name: bun-linux-aarch64-profile
          path: ${{runner.temp}}/release/bun-profile
      - uses: actions/upload-artifact@v3
        with:
          name: bun-obj-linux-aarch64
          path: ${{runner.temp}}/release/bun-obj

  release:
    name: release
    runs-on: ubuntu-18.04
    timeout-minutes: 90
    needs:
      - linux-x64
      - linux-aarch64
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: ${{runner.temp}}/release
      - name: Rename files
        run: |
          cd ${{runner.temp}}/release
          mv bun-linux-amd64-generic bun-linux-amd64-baseline
          mv bun-linux-amd64-generic-profile bun-linux-amd64-baseline-profile

          zip -r bun-linux-amd64.zip bun-linux-amd64
          zip -r bun-linux-amd64-baseline.zip bun-linux-amd64-baseline
          zip -r bun-linux-amd64-profile.zip bun-linux-amd64-profile
          zip -r bun-linux-amd64-baseline-profile.zip bun-linux-amd64-baseline-profile
          zip -r bun-linux-aarch64.zip bun-linux-aarch64
          zip -r bun-linux-aarch64-profile.zip bun-linux-aarch64-profile

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          tag_name: "canary"
          name: Canary
          files: |
            ${{runner.temp}}/release/*.zip
